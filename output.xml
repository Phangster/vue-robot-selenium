<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0 (Python 3.9.10 on darwin)" generated="20220331 18:39:14.050" rpa="false" schemaversion="3">
<suite id="s1" name="Vue-Robot-Selenium" source="/Users/bryanphang/Documents/Personal/vue-robot-selenium">
<suite id="s1-s1" name="Tests" source="/Users/bryanphang/Documents/Personal/vue-robot-selenium/tests">
<suite id="s1-s1-s1" name="E2E" source="/Users/bryanphang/Documents/Personal/vue-robot-selenium/tests/e2e">
<suite id="s1-s1-s1-s1" name="HomeView" source="/Users/bryanphang/Documents/Personal/vue-robot-selenium/tests/e2e/HomeView.robot">
<test id="s1-s1-s1-s1-t1" name="Valid Login" line="9">
<kw name="Open Browser To Login Page" library="homeview">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${LOGIN URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220331 18:39:14.224" level="INFO">Opening browser 'Firefox' to base url 'http://localhost:8080/'.</msg>
<msg timestamp="20220331 18:39:14.225" level="INFO">Firefox driver log is always forced to to: /Users/bryanphang/Documents/Personal/vue-robot-selenium/geckodriver-7.log</msg>
<status status="PASS" starttime="20220331 18:39:14.224" endtime="20220331 18:39:16.437"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220331 18:39:16.437" endtime="20220331 18:39:17.026"/>
</kw>
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<arg>${DELAY}</arg>
<doc>Sets the delay that is waited after each Selenium command.</doc>
<status status="PASS" starttime="20220331 18:39:17.026" endtime="20220331 18:39:17.026"/>
</kw>
<kw name="Login Page Should Be Open" library="homeview">
<kw name="Title Should Be" library="SeleniumLibrary">
<arg>vue-robot-selenium</arg>
<doc>Verifies that the current page title equals ``title``.</doc>
<msg timestamp="20220331 18:39:17.028" level="INFO">Page title is 'vue-robot-selenium'.</msg>
<status status="PASS" starttime="20220331 18:39:17.027" endtime="20220331 18:39:17.029"/>
</kw>
<status status="PASS" starttime="20220331 18:39:17.026" endtime="20220331 18:39:17.029"/>
</kw>
<status status="PASS" starttime="20220331 18:39:14.224" endtime="20220331 18:39:17.029"/>
</kw>
<kw name="Generate random email" library="homeview">
<kw name="Generate Random Emails" library="CustomLib">
<var>${random_email}</var>
<arg>${8}</arg>
<msg timestamp="20220331 18:39:17.030" level="INFO">${random_email} = ['ggiidcak@yahoo.com']</msg>
<status status="PASS" starttime="20220331 18:39:17.029" endtime="20220331 18:39:17.030"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${random_email}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220331 18:39:17.030" endtime="20220331 18:39:17.030"/>
</kw>
<status status="PASS" starttime="20220331 18:39:17.029" endtime="20220331 18:39:17.030"/>
</kw>
<kw name="Input Username" library="homeview">
<arg>bryan</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>username</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220331 18:39:17.031" level="INFO">Typing text 'bryan' into text field 'username'.</msg>
<status status="PASS" starttime="20220331 18:39:17.030" endtime="20220331 18:39:17.050"/>
</kw>
<status status="PASS" starttime="20220331 18:39:17.030" endtime="20220331 18:39:17.050"/>
</kw>
<kw name="Input Password" library="homeview">
<arg>123456</arg>
<kw name="Input Text" library="SeleniumLibrary">
<arg>password</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220331 18:39:17.051" level="INFO">Typing text '123456' into text field 'password'.</msg>
<status status="PASS" starttime="20220331 18:39:17.050" endtime="20220331 18:39:17.067"/>
</kw>
<status status="PASS" starttime="20220331 18:39:17.050" endtime="20220331 18:39:17.067"/>
</kw>
<kw name="Submit Credentials" library="homeview">
<kw name="Click Button" library="SeleniumLibrary">
<arg>login</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220331 18:39:17.067" level="INFO">Clicking button 'login'.</msg>
<status status="PASS" starttime="20220331 18:39:17.067" endtime="20220331 18:39:17.281"/>
</kw>
<status status="PASS" starttime="20220331 18:39:17.067" endtime="20220331 18:39:17.281"/>
</kw>
<kw name="Welcome Page Should Be Open" library="homeview">
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>id:title</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220331 18:39:17.293" level="INFO">${text} = Welcome Page, Bryan</msg>
<status status="PASS" starttime="20220331 18:39:17.282" endtime="20220331 18:39:17.293"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${text}</arg>
<arg>Welcome</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20220331 18:39:17.293" endtime="20220331 18:39:17.293"/>
</kw>
<status status="PASS" starttime="20220331 18:39:17.281" endtime="20220331 18:39:17.293"/>
</kw>
<kw name="Decode QR" library="homeview">
<kw name="Execute Javascript" library="SeleniumLibrary">
<var>${test}</var>
<arg>/Users/bryanphang/Documents/Personal/vue-robot-selenium/tests/e2e/resources/../modules/qr.js</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20220331 18:39:17.295" level="INFO" html="true">Reading JavaScript from file &lt;a href="file:///Users/bryanphang/Documents/Personal/vue-robot-selenium/tests/e2e/resources/../modules/qr.js"&gt;/Users/bryanphang/Documents/Personal/vue-robot-selenium/tests/e2e/resources/../modules/qr.js&lt;/a&gt;.</msg>
<msg timestamp="20220331 18:39:17.296" level="INFO">Executing JavaScript:
/* eslint-disable max-len */
/* eslint-disable no-bitwise */
// const { BrowserQRCodeReader } = require('@zxing/browser');

// const codeReader = new BrowserQRCodeReader();
// const base64 = document.getElementById('reader').src;
return 1;
// const resultImage = codeReader.decodeFromImageElement(url);
// const {
//   MultiFormatReader,
//   BarcodeFormat,
//   DecodeHintType,
//   RGBLuminanceSource,
//   BinaryBitmap,
//   HybridBinarizer,
// } = require('@zxing/library');

// const { PNG } = require('pngjs');

// const rawImageData = PNG.sync.read(Buffer.from(base64.split(';base64,')[1], 'base64'));

// const hints = new Map();
// const formats = [BarcodeFormat.QR_CODE, BarcodeFormat.DATA_MATRIX];

// hints.set(DecodeHintType.POSSIBLE_FORMATS, formats);
// hints.set(DecodeHintType.TRY_HARDER, true);

// const reader = new MultiFormatReader();

// reader.setHints(hints);

// const len = rawImageData.width * rawImageData.height;

// const luminancesUint8Array = new Uint8ClampedArray(len);
// for (let i = 0; i &lt; len; i += 1) {
//   luminancesUint8Array[i] = ((rawImageData.data[i * 4] + rawImageData.data[i * 4 + 1] * 2 + rawImageData.data[i * 4 + 2]) / 4) &amp; 0xFF;
// }

// const luminanceSource = new RGBLuminanceSource(luminancesUint8Array, rawImageData.width, rawImageData.height);

// const binaryBitmap = new BinaryBitmap(new HybridBinarizer(luminanceSource));

// const qrCode = reader.decode(binaryBitmap);

// if (qrCode) {
//   return qrCode.getText();
// }
// return '';
Without any arguments.</msg>
<msg timestamp="20220331 18:39:17.299" level="INFO">${test} = 1</msg>
<status status="PASS" starttime="20220331 18:39:17.294" endtime="20220331 18:39:17.299"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${test}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220331 18:39:17.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220331 18:39:17.299" endtime="20220331 18:39:17.299"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220331 18:39:22.300" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220331 18:39:17.299" endtime="20220331 18:39:22.301"/>
</kw>
<status status="PASS" starttime="20220331 18:39:17.294" endtime="20220331 18:39:22.302"/>
</kw>
<kw name="Check Iframe" library="homeview">
<kw name="Select Frame" library="SeleniumLibrary">
<arg>//iframe[@id='iframe']</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20220331 18:39:22.304" level="INFO">Selecting frame '//iframe[@id='iframe']'.</msg>
<status status="PASS" starttime="20220331 18:39:22.303" endtime="20220331 18:39:22.314"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>MY BLOG</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20220331 18:39:22.319" level="INFO">Current frame contains text 'MY BLOG'.</msg>
<status status="PASS" starttime="20220331 18:39:22.314" endtime="20220331 18:39:22.319"/>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20220331 18:39:22.319" endtime="20220331 18:39:22.321"/>
</kw>
<status status="PASS" starttime="20220331 18:39:22.302" endtime="20220331 18:39:22.321"/>
</kw>
<kw name="Click On Link" library="homeview">
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@data-qa="wiki-link"]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220331 18:39:22.322" level="INFO">Clicking element '//*[@data-qa="wiki-link"]'.</msg>
<status status="PASS" starttime="20220331 18:39:22.321" endtime="20220331 18:39:22.634"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>//*[@class="central-textlogo-wrapper"]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220331 18:39:22.641" level="INFO">${text} = Wikipedia
The Free Encyclopedia</msg>
<status status="PASS" starttime="20220331 18:39:22.634" endtime="20220331 18:39:22.641"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${text}</arg>
<arg>Wikipedia</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20220331 18:39:22.641" endtime="20220331 18:39:22.641"/>
</kw>
<status status="PASS" starttime="20220331 18:39:22.321" endtime="20220331 18:39:22.641"/>
</kw>
<kw name="Search On Wikipedia" library="homeview">
<kw name="Input Text" library="SeleniumLibrary">
<arg>//*[@id="searchInput"]</arg>
<arg>Selenium</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220331 18:39:22.642" level="INFO">Typing text 'Selenium' into text field '//*[@id="searchInput"]'.</msg>
<status status="PASS" starttime="20220331 18:39:22.641" endtime="20220331 18:39:22.654"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>class:pure-button</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220331 18:39:22.654" level="INFO">Clicking element 'class:pure-button'.</msg>
<status status="PASS" starttime="20220331 18:39:22.654" endtime="20220331 18:39:23.851"/>
</kw>
<kw name="Title Should Be" library="SeleniumLibrary">
<arg>Selenium - Wikipedia</arg>
<doc>Verifies that the current page title equals ``title``.</doc>
<msg timestamp="20220331 18:39:23.853" level="INFO">Page title is 'Selenium - Wikipedia'.</msg>
<status status="PASS" starttime="20220331 18:39:23.852" endtime="20220331 18:39:23.853"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>//*[@id="firstHeading"]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220331 18:39:23.900" level="INFO">${text} = Selenium</msg>
<status status="PASS" starttime="20220331 18:39:23.853" endtime="20220331 18:39:23.900"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${text}</arg>
<arg>Selenium</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20220331 18:39:23.900" endtime="20220331 18:39:23.900"/>
</kw>
<status status="PASS" starttime="20220331 18:39:22.641" endtime="20220331 18:39:23.901"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220331 18:39:23.901" endtime="20220331 18:39:24.315"/>
</kw>
<status status="PASS" starttime="20220331 18:39:14.223" endtime="20220331 18:39:24.315"/>
</test>
<doc>A test suite with a single test for valid login.

This test has a workflow that is created using keywords in
the imported resource file.</doc>
<status status="PASS" starttime="20220331 18:39:14.079" endtime="20220331 18:39:24.316"/>
</suite>
<suite id="s1-s1-s1-s2" name="Test" source="/Users/bryanphang/Documents/Personal/vue-robot-selenium/tests/e2e/Test.robot">
<test id="s1-s1-s1-s2-t1" name="Open Google &amp; Verify Google" line="7">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>https://www.google.com</arg>
<arg>browser=firefox</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220331 18:39:24.318" level="INFO">Opening browser 'firefox' to base url 'https://www.google.com'.</msg>
<msg timestamp="20220331 18:39:24.319" level="INFO">Firefox driver log is always forced to to: /Users/bryanphang/Documents/Personal/vue-robot-selenium/geckodriver-8.log</msg>
<status status="PASS" starttime="20220331 18:39:24.318" endtime="20220331 18:39:26.116"/>
</kw>
<kw name="Get Title" library="SeleniumLibrary">
<var>${Get_title}</var>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20220331 18:39:26.123" level="INFO">${Get_title} = Google</msg>
<status status="PASS" starttime="20220331 18:39:26.116" endtime="20220331 18:39:26.123"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${Get_title}</arg>
<arg>Google</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220331 18:39:26.123" endtime="20220331 18:39:26.123"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220331 18:39:26.123" endtime="20220331 18:39:26.551"/>
</kw>
<status status="PASS" starttime="20220331 18:39:24.318" endtime="20220331 18:39:26.551"/>
</test>
<doc>My First Test
This test will Verify Google</doc>
<status status="PASS" starttime="20220331 18:39:24.317" endtime="20220331 18:39:26.551"/>
</suite>
<status status="PASS" starttime="20220331 18:39:14.079" endtime="20220331 18:39:26.552"/>
</suite>
<status status="PASS" starttime="20220331 18:39:14.078" endtime="20220331 18:39:26.552"/>
</suite>
<status status="PASS" starttime="20220331 18:39:14.063" endtime="20220331 18:39:26.553"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="Vue-Robot-Selenium">Vue-Robot-Selenium</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Tests">Vue-Robot-Selenium.Tests</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1" name="E2E">Vue-Robot-Selenium.Tests.E2E</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1-s1" name="HomeView">Vue-Robot-Selenium.Tests.E2E.HomeView</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1-s2" name="Test">Vue-Robot-Selenium.Tests.E2E.Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
